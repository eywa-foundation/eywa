syntax = "proto3";

package eywa.eywa;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "eywa/eywa/params.proto";
import "eywa/eywa/user.proto";
import "eywa/eywa/handshake.proto";

option go_package = "eywa/x/eywa/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/eywa/eywa/params";
  
  }
  
  // Queries a list of GetUser items.
  rpc GetUser (QueryGetUserRequest) returns (QueryGetUserResponse) {
    option (google.api.http).get = "/eywa/eywa/get_user/{submitter}";
  
  }
  
  // Queries a list of GetHandshake items.
  rpc GetHandshake (QueryGetHandshakeRequest) returns (QueryGetHandshakeResponse) {
    option (google.api.http).get = "/eywa/eywa/get_handshake/{receiver}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetUserRequest {
  string submitter = 1;
}

message QueryGetUserResponse {
  User user = 1;
}

message QueryGetHandshakeRequest {
  string                                receiver   = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetHandshakeResponse {
  repeated Handshake handshake = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

