syntax = "proto3";

package eywa.eywa;

option go_package = "eywa/x/eywa/types";

// Msg defines the Msg service.
service Msg {
  rpc RegisterUser      (MsgRegisterUser     ) returns (MsgRegisterUserResponse     );
  rpc CreateHandshake   (MsgCreateHandshake  ) returns (MsgCreateHandshakeResponse  );
  rpc CreateRelayServer (MsgCreateRelayServer) returns (MsgCreateRelayServerResponse);
  rpc CreateChat        (MsgCreateChat       ) returns (MsgCreateChatResponse       );
}
message MsgRegisterUser {
  string creator = 1;
  string pubkey  = 2;
}

message MsgRegisterUserResponse {
  uint64 id = 1;
}

message MsgCreateHandshake {
  string creator       = 1;
  string receiver      = 2;
  string roomId        = 3;
  string serverAddress = 4;
}

message MsgCreateHandshakeResponse {}

message MsgCreateRelayServer {
  string creator  = 1;
  string nickname = 2;
  string location = 3;
}

message MsgCreateRelayServerResponse {}

message MsgCreateChat {
  string creator  = 1;
  string roomId   = 2;
  string receiver = 3;
  string message  = 4;
  uint64 time     = 5;
}

message MsgCreateChatResponse {}

